; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = rp2040-rel

[env]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
framework = arduino
; Nano RP2040 has 16MB flash onboard, per the specs - limiting here to 4MB as more than sufficient; overwriting the default config that only specifies 2MB
; Defaults are specified at ~\.platformio\platforms\raspberrypi\boards\nanorp2040connect.json (and other board specifics)
board_upload.maximum_size=4194304
board = nanorp2040connect
board_build.core = earlephilhower
board_build.filesystem_size = 768k
lib_deps =
;    arduino-libraries/WiFiNINA @ ^1.8.14
    arduino-libraries/NTPClient @ ^3.2.1
    arduino-libraries/Arduino_LSM6DSOX @ ^1.1.2
    fastled/FastLED @ ^3.9.0
    bblanchon/ArduinoJson @ ^7.0.0
    paulstoffregen/Time @ ^1.6.1
    arduino-libraries/ArduinoECCX08 @ ^1.3.7
    arduino-libraries/ArduinoHttpClient @ ^0.6.1

[env:rp2040-rel]
monitor_speed = 115200
; specific global configuration flags; -w ignore all warnings - comment this when adding new libraries, or making major code changes
; MDNS_ENABLED - the library that supports mDNS seems to work somewhat well with Linux hosts, but flaky with Windows; disabled by default
build_flags =
    -w
    -D configMAX_PRIORITIES=12
    -D configTIMER_QUEUE_LENGTH=24
    -D configRECORD_STACK_HIGH_ADDRESS=1
    -D configRUN_TIME_COUNTER_TYPE=uint64_t
    -D LOGGING_ENABLED=1
    -D MDNS_ENABLED=0
;    -D DEBUG_RP2040_PORT=Serial
    !python build_info.py

[env:rp2040-dbg]
monitor_speed = 115200
; the other option is cmsis-dap for both debug_tool and upload_protocol; picoprobe seems to be working better with RP2040 and the Pico Debug Probe
debug_tool = picoprobe
upload_protocol = picoprobe
; ignore all warnings - comment this when adding new libraries, or making major code changes
build_flags =
    -w
    -D configMAX_PRIORITIES=12
    -D configTIMER_QUEUE_LENGTH=24
    -D configRECORD_STACK_HIGH_ADDRESS=1
    -D configRUN_TIME_COUNTER_TYPE=uint64_t
    -D GIT_COMMIT=\"DBG\"
    -D GIT_COMMIT_SHORT=\"DBG\"
    -D GIT_BRANCH=\"DEV\"
    -D BUILD_TIME=\"${UNIX_TIME}\"
    -D LOGGING_ENABLED=1
    -D MDNS_ENABLED=0
    -D DEBUG_RP2040_PORT=Serial
;    -D DEBUG_RP2040_SPI=1
; See Readme - custom OpenOCD with Nano RP2040 Connect Atmel 16MB flash chip specifications added - built from source at https://github.com/raspberrypi/openocd.git branch rp2040-v0.12.0
;platform_packages =
;    tool-openocd-raspberrypi=symlink:///home/dan/Code/Tools/openocd-rp2040-earle
;;FOR PIO HOME INSPECTION only: to succeed building debug flavor, in efx_setup.h add #define FASTLED_ALLOW_INTERRUPTS 0 before including the PaletteFactory.h; see https://github.com/FastLED/FastLED/issues/1481
build_type = debug
debug_build_flags = -Og -ggdb -DFASTLED_ALLOW_INTERRUPTS=0
debug_speed = 5000
;;debug_svd_path=/home/dan/.platformio/packages/framework-arduino-mbed/svd/rp2040.svd
